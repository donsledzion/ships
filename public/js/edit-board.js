/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/edit-board.js":
/*!************************************!*\
  !*** ./resources/js/edit-board.js ***!
  \************************************/
/***/ (() => {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar fields;\nvar four_master;\nvar three_master;\nvar two_master;\nvar one_master;\nvar current_ship;\nvar nextFields = [];\nvar defaultBoxBg = '#20c997';\nvar highlightBoxBg = '#07faea';\nvar lockedBoxBg = '#b8d1bb';\nvar lastShip;\n\nvar Field = /*#__PURE__*/function () {\n  function Field(_x, _y) {\n    _classCallCheck(this, Field);\n\n    this.x = _x;\n    this.y = _y;\n  }\n\n  _createClass(Field, [{\n    key: \"getX\",\n    value: function getX() {\n      return this.x;\n    }\n  }, {\n    key: \"getXasNumber\",\n    value: function getXasNumber() {\n      return +this.x.charCodeAt(0) - 64;\n    }\n  }, {\n    key: \"getY\",\n    value: function getY() {\n      return this.y;\n    }\n  }, {\n    key: \"position\",\n    value: function position() {\n      return this.x + this.y;\n    }\n  }, {\n    key: \"inject\",\n    value: function inject(see) {\n      var X = String.fromCharCode(this.x + 64);\n      var Y = this.y;\n      see.X.Y = \"S\";\n    }\n  }, {\n    key: \"markAsCompleted\",\n    value: function markAsCompleted(field) {\n      $('#' + field.position() + '').attr('data-status', 'border');\n      var X = this.getXasNumber();\n      var Y = this.getY();\n\n      for (var i = -1; i <= 1; i++) {\n        for (var j = -1; j <= 1; j++) {\n          if (isFieldOnBoard(X + j, Y + i)) {\n            var column = String.fromCharCode(+X + j + 64);\n            var row = Y + i;\n            var fieldToSwitchOff = $('#' + column + row);\n\n            if (fieldToSwitchOff.attr('data-status') === 'free') {\n              fieldToSwitchOff.attr('data-status', 'border').css('background', lockedBoxBg);\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"pointNeighbours\",\n    value: function pointNeighbours() {\n      var neighbours = []; //top\n\n      if (this.getY() > 1) {\n        neighbours.push(new Field(this.getX(), this.getY() - 1));\n        console.log('Dodaję sąsiada: ' + neighbours[neighbours.length - 1].position());\n      } //bottom\n\n\n      if (this.getY() < 10) {\n        neighbours.push(new Field(this.getX(), this.getY() + 1));\n        console.log('Dodaję sąsiada: ' + neighbours[neighbours.length - 1].position());\n      } //left\n\n\n      if (this.getXasNumber() > 1) {\n        neighbours.push(new Field(String.fromCharCode(this.getXasNumber() + 63), this.getY()));\n        console.log('Dodaję sąsiada: ' + neighbours[neighbours.length - 1].position());\n      } //right\n\n\n      if (this.getXasNumber() < 10) {\n        neighbours.push(new Field(String.fromCharCode(this.getXasNumber() + 65), this.getY()));\n        console.log('Dodaję sąsiada: ' + neighbours[neighbours.length - 1].position());\n      }\n\n      return neighbours;\n    }\n  }, {\n    key: \"getStatus\",\n    value: function getStatus() {\n      return $('#' + this.x + this.y).attr(\"data-status\");\n    }\n  }, {\n    key: \"hintNeighbours\",\n    value: function hintNeighbours() {\n      var neighbours = this.pointNeighbours();\n      $.each(neighbours, function (key, value) {\n        if (value.getStatus() === \"free\") {\n          console.log(\"Somsiady: \" + value.position());\n          $('#' + value.position()).attr(\"data-hinted\", \"true\").css('background', highlightBoxBg);\n          nextFields.push.value;\n          /*value.hintField();*/\n        }\n      });\n    }\n  }]);\n\n  return Field;\n}();\n\nvar Ship = /*#__PURE__*/function () {\n  function Ship(size, index) {\n    _classCallCheck(this, Ship);\n\n    this.size = size;\n    this.index = index;\n    this.fields = [];\n    this.completed = false;\n    var img;\n    var name;\n    var sequences;\n\n    switch (size) {\n      case 1:\n        img = 'mini-one-master.png';\n        name = nameOneMaster;\n        sequences = 'sequences-one-master.png';\n        break;\n\n      case 2:\n        img = 'mini-two-master.png';\n        name = nameTwoMaster;\n        sequences = 'sequences-two-master.png';\n        break;\n\n      case 3:\n        img = 'mini-three-master.png';\n        name = nameThreeMaster;\n        sequences = 'sequences-three-master.png';\n        break;\n\n      case 4:\n        img = 'mini-four-master.png';\n        name = nameFourMaster;\n        sequences = 'sequences-four-master.png';\n        break;\n\n      default:\n        img = 'mini-one-master.png';\n        name = nameOneMaster;\n        sequences = 'sequences-one-master.png';\n    }\n\n    this.name = name;\n    this.avatar = img;\n    this.sequences = sequences;\n  }\n\n  _createClass(Ship, [{\n    key: \"addField\",\n    value: function addField(field) {\n      if (this.fields.length < this.size) {\n        // need to insert some validation rules\n        this.fields.push(field);\n        $('#' + field.position() + '').html('<img id=\"theImg\" src=\"' + baseUrl + '/storage/img/cross-green.png\" style=\"width:100%; height: 100%; object-fit: cover;\" />').attr('data-status', 'ship').attr('data-hinted', 'false').css('background', defaultBoxBg);\n\n        if (this.fields.length == this.size) {\n          this.setCompleted();\n          this.markAsCompleted();\n        }\n      } else {\n        alert('ZIOMUŚ! Nie można już więcej pól dodać do tego statku!');\n      }\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return this.size;\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex() {\n      return this.index;\n    }\n  }, {\n    key: \"getAvatar\",\n    value: function getAvatar() {\n      return this.avatar;\n    }\n  }, {\n    key: \"getSequences\",\n    value: function getSequences() {\n      return this.sequences;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return this.name;\n    }\n  }, {\n    key: \"launch\",\n    value: function launch(see) {\n      $.each(this.fields, function (index, value) {\n        value.inject(see);\n      });\n    }\n  }, {\n    key: \"setCompleted\",\n    value: function setCompleted() {\n      console.log(\"Ustawiam statek jako skończony!\");\n      this.completed = true;\n    }\n  }, {\n    key: \"isCompleted\",\n    value: function isCompleted() {\n      if (this.completed) {\n        console.log(\"Statek jest skończony.\");\n      }\n\n      return this.completed;\n    }\n  }, {\n    key: \"markAsCompleted\",\n    value: function markAsCompleted() {\n      $.each(this.fields, function (key, value) {\n        value.markAsCompleted(value);\n      });\n    }\n  }, {\n    key: \"getFields\",\n    value: function getFields() {\n      return this.fields;\n    }\n  }]);\n\n  return Ship;\n}();\n\nfunction isFieldOnBoard(x, y) {\n  if (x < 1) {\n    return false;\n  }\n\n  if (x > 10) {\n    return false;\n  }\n\n  if (y < 1) {\n    return false;\n  }\n\n  if (y > 10) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction clearHinted() {\n  for (var col = 1; col <= 10; col++) {\n    for (var row = 1; row <= 10; row++) {\n      var column = String.fromCharCode(col + 64);\n      $('#' + column + row).attr(\"data-hinted\", \"false\");\n    }\n  }\n}\n\nfunction readBoard(board_id) {\n  $.ajax({\n    url: baseUrl + '/board/' + board_id,\n    method: \"get\"\n  }).done(function (response) {\n    console.log(response);\n    console.log(response.fields.A[1]);\n    fields = response.fields;\n  }).fail(function (response) {\n    console.log('fail!');\n    console.log(response);\n  });\n}\n\nfunction currentShipDraw(current_ship) {\n  $('#currently-creating').html('<div class=\"h2 center\">' + current_ship.getName() + '</div><img id=\"theImg\" src=\"' + baseAsset + '/' + current_ship.getAvatar() + '\" style=\"width:100%; height: 100%; object-fit: cover;\" />');\n  $('#available-sequences').html('<div class=\"h3 center\">' + availableSequences + '</div><img id=\"theImg\" src=\"' + baseAsset + '/' + current_ship.getSequences() + '\" style=\"margin-left: auto; margin-right: auto;height: 100%; object-fit: cover;\" />');\n}\n\nfunction startPopup() {\n  Swal.fire({\n    title: '<strong>Przed rozpoczęciem rozgrywki stwórz swoją planszę</strong>',\n    html: '<a href=\"#\" class=\"list-group-item active\">\\n' + '    Ustaw na planszy swoje statki w kolejności:\\n' + '  </a>' + '<ul class=\"list-group\">' + '<li class=\"list-group-item justify-content-between\">' + 'Jeden czteromasztowiec' + '<span class=\"badge badge-default badge-pill\">14</span>' + '</li>' + '<li class=\"list-group-item justify-content-between\">' + 'Dwa trójmasztowce' + '<span class=\"badge badge-default badge-pill\">2</span>' + '</li>' + '<li class=\"list-group-item justify-content-between\">' + 'Trzy dwumasztowce' + '<span class=\"badge badge-default badge-pill\">1</span>' + '</li>' + '<li class=\"list-group-item justify-content-between\">' + 'Cztery jednomasztowce' + '<span class=\"badge badge-default badge-pill\">1</span>' + '</li>' + '</ul>',\n    focusConfirm: false,\n    confirmButtonText: 'Do dzieła!'\n  });\n}\n\nfunction pickNextShip(current_ship) {\n  return getShipByIndex(current_ship.getIndex() + 1);\n}\n\nfunction getShipByIndex(index) {\n  switch (index) {\n    case 1:\n      return four_master;\n\n    case 2:\n      return three_master[0];\n\n    case 3:\n      return three_master[1];\n\n    case 4:\n      return two_master[0];\n\n    case 5:\n      return two_master[1];\n\n    case 6:\n      return two_master[2];\n\n    case 7:\n      return one_master[0];\n\n    case 8:\n      return one_master[1];\n\n    case 9:\n      return one_master[2];\n\n    case 10:\n      return one_master[3];\n\n    default:\n      return null;\n  }\n}\n\n$(function () {\n  for (var col = 1; col <= 10; col++) {\n    console.log(String.fromCharCode(col + 64));\n  }\n\n  startPopup();\n  readBoard($('#save-board').data(\"id\"));\n  four_master = new Ship(+4, +1);\n  three_master = [new Ship(+3, +2), new Ship(+3, +3)];\n  two_master = [new Ship(+2, +4), new Ship(+2, +5), new Ship(+2, +6)];\n  one_master = [new Ship(+1, +7), new Ship(+1, +8), new Ship(+1, +9), new Ship(+1, +10)];\n  current_ship = four_master;\n  currentShipDraw(current_ship);\n  $('.tic-box').click(function () {\n    var field = new Field($(this).data(\"x\"), $(this).data(\"y\"));\n\n    if (current_ship.getFields().length > 0) {\n      if ($(this).attr(\"data-hinted\") === \"true\") {\n        current_ship.addField(field);\n        field.hintNeighbours();\n      }\n    } else if (field.getStatus() === \"free\") {\n      current_ship.addField(field);\n      field.hintNeighbours();\n    } else {\n      Swal.fire(\"To pole nie jest dostępne! (nie kombinuj)\");\n    }\n\n    if (current_ship.isCompleted()) {\n      current_ship = pickNextShip(current_ship);\n      clearHinted();\n\n      if (current_ship) {\n        currentShipDraw(current_ship);\n      } else {\n        Swal.fire(\"Wygląda na to, że plansza jest gotowa. Wciśnij przycisk 'ZAPISZ' aby przejsc do stołu i zacząć rozgrywkę.\");\n      }\n    }\n  });\n  $('#save-board').click(function () {\n    var board_id = $(this).data(\"id\");\n    console.log(\"Fields to be saved:\");\n    console.log(fields); //four_master.launch(fields);\n\n    $.each(four_master.fields, function (index, value) {\n      var poziomo = value.getX();\n      var pionowo = value.getY();\n      console.log(\"poziomo: \" + poziomo + \", pionowo: \" + pionowo); //fields.poziomo = \"S\";\n    });\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n    console.log('zapisywanie planszy nr ' + board_id);\n    fields.A[1] = \"X\";\n    $.ajax({\n      method: 'put',\n      url: baseUrl + '/board/' + board_id,\n      dataType: 'json',\n      data: {\n        \"fields\": JSON.stringify(fields),\n        \"four_master\": JSON.stringify(four_master),\n        \"three_master\": JSON.stringify(three_master),\n        \"two_master\": JSON.stringify(two_master),\n        \"one_master\": JSON.stringify(one_master)\n      }\n    }).done(function (response) {\n      console.log(\"Well done! \" + response.message);\n      console.log(\"Board:\");\n      /*console.log(response.board.fields);*/\n\n      Swal.fire(response.message).then(function (result) {\n        if (result.isConfirmed) {\n          if (response.status === 'fail') {\n            location.reload();\n          }\n\n          window.location.replace(baseUrl + '/table/' + response.board.table.id);\n        }\n      });\n    }).fail(function (response) {\n      Swal.fire(response.message).then(function (result) {\n        if (result.isConfirmed) {\n          location.reload();\n        }\n      });\n      console.log(\"Shit happened! \" + response.responseText.message);\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/edit-board.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/edit-board.js"]();
/******/ 	
/******/ })()
;