/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/edit-board.js":
/*!************************************!*\
  !*** ./resources/js/edit-board.js ***!
  \************************************/
/***/ (() => {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Field = /*#__PURE__*/function () {\n  function Field(_x, _y) {\n    _classCallCheck(this, Field);\n\n    this.x = _x;\n    this.y = _y;\n  }\n\n  _createClass(Field, [{\n    key: \"getX\",\n    value: function getX() {\n      return this.x;\n    }\n  }, {\n    key: \"getY\",\n    value: function getY() {\n      return this.y;\n    }\n  }, {\n    key: \"position\",\n    value: function position() {\n      return this.x + this.y;\n    }\n  }, {\n    key: \"inject\",\n    value: function inject(see) {\n      var X = String.fromCharCode(this.x + 64);\n      var Y = this.y;\n      see.X.Y = \"S\";\n    }\n  }]);\n\n  return Field;\n}();\n\nvar Ship = /*#__PURE__*/function () {\n  function Ship(size) {\n    _classCallCheck(this, Ship);\n\n    this.size = size;\n    this.fields = [];\n  }\n\n  _createClass(Ship, [{\n    key: \"addField\",\n    value: function addField(field) {\n      if (this.fields.length < this.size) {\n        // need to insert some validation rules\n        this.fields.push(field);\n        $('#' + field.position() + '').append('<img id=\"theImg\" src=\"' + baseUrl + '/storage/img/cross-green.png\" style=\"width:100%; height: 100%; object-fit: cover;\" />');\n      } else {\n        alert('ZIOMUŚ! Nie można już więcej pól dodać do tego statku!');\n      }\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return this.size;\n    }\n  }, {\n    key: \"launch\",\n    value: function launch(see) {\n      $.each(this.fields, function (index, value) {\n        value.inject(see);\n      });\n    }\n  }]);\n\n  return Ship;\n}();\n\nvar fields;\n\nfunction readBoard(board_id) {\n  $.ajax({\n    url: baseUrl + '/board/' + board_id,\n    method: \"get\"\n  }).done(function (response) {\n    console.log(response);\n    console.log(response.fields.A[1]);\n    fields = response.fields;\n  }).fail(function (response) {\n    console.log('fail!');\n    console.log(response);\n  });\n}\n\n$(function () {\n  readBoard($('#save-board').data(\"id\"));\n  var four_master = new Ship(+4);\n  var three_master = [new Ship(+3), new Ship(+3)];\n  var two_master = [new Ship(+2), new Ship(+2), new Ship(+2)];\n  var one_master = [new Ship(+1), new Ship(+1), new Ship(+1), new Ship(+1)];\n  var current_ship = four_master; //alert('script loaded!');\n\n  $('.tic-box').click(function () {\n    var field = new Field($(this).data(\"x\"), $(this).data(\"y\"));\n    console.log('Dodawanie pola ' + field.position() + \" do statku \" + current_ship.getSize() + \"-masztowego\");\n    current_ship.addField(field);\n  });\n  $('.ship-picker').click(function () {\n    var size = $(this).data(\"size\");\n    var order = $(this).data(\"order\");\n\n    switch (size) {\n      case 4:\n        current_ship = four_master;\n        break;\n\n      case 3:\n        current_ship = three_master[order - 1];\n        break;\n\n      case 2:\n        current_ship = two_master[order - 1];\n        break;\n\n      case 1:\n        current_ship = one_master[order - 1];\n        break;\n\n      default:\n        alert(\"Coś nie tak :/\");\n    }\n\n    console.log('Wybrano statek ' + size + \"-masztowy nr \" + order);\n  });\n  $('#save-board').click(function () {\n    var board_id = $(this).data(\"id\");\n    console.log(\"Fields to be saved:\");\n    console.log(fields); //four_master.launch(fields);\n\n    $.each(four_master.fields, function (index, value) {\n      var poziomo = value.getX();\n      var pionowo = value.getY();\n      console.log(\"poziomo: \" + poziomo + \", pionowo: \" + pionowo); //fields.poziomo = \"S\";\n    });\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n    console.log('zapisywanie planszy nr ' + board_id);\n    fields.A[1] = \"X\";\n    $.ajax({\n      method: 'put',\n      url: baseUrl + '/board/' + board_id,\n      dataType: 'json',\n      data: {\n        \"fields\": JSON.stringify(fields),\n        \"four_master\": JSON.stringify(four_master),\n        \"three_master\": JSON.stringify(three_master),\n        \"two_master\": JSON.stringify(two_master),\n        \"one_master\": JSON.stringify(one_master)\n      }\n    }).done(function (response) {\n      console.log(\"Well done! \" + response.message);\n      console.log(\"Board:\");\n      console.log(response.board.fields);\n      Swal.fire('Udało się utworzyć planszę! Jak tylko wszyscy gracze będą gotowi możemy zaczynać!');\n    }).fail(function (response) {\n      console.log(\"Shit happened! \" + response.message);\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/edit-board.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/edit-board.js"]();
/******/ 	
/******/ })()
;