/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/game-board.js":
/*!************************************!*\
  !*** ./resources/js/game-board.js ***!
  \************************************/
/***/ (() => {

eval("$(function () {\n  $('.single-box').click(function () {\n    shot($(this));\n  });\n  $('.chat-send').click(function () {\n    sendChatMessage();\n  });\n  $('.player').click(function () {\n    var targetURL = baseUrl + '/board/' + $(this).data(\"board-id\");\n    console.log('BaseUrl: ' + targetURL);\n    $.ajax({\n      url: targetURL,\n      method: \"get\"\n    }).done(function (response) {\n      console.log(response);\n      console.log(response.fields.A[1]);\n    }).fail(function (response) {\n      console.log('fail!');\n      console.log(response);\n    });\n  });\n});\nvar message_input = $('#chat-input-text');\nvar message_button = $('.chat-send');\nmessage_input.bind(\"keyup\", function (event) {\n  if (event.key === 'Enter') {\n    event.preventDefault();\n    message_button.click();\n  }\n});\nwindow.Echo.channel('game.' + tableId).listen('PlayerMoved', function (response) {\n  console.log(\"Echo engaged!\");\n  console.log(\"Winner: \" + response.table.winner);\n  $('#log-list').append(\"<li>\" + response.log + \"</li>\");\n  $('#game-log').animate({\n    scrollTop: $('#log-list li:last-child').offset().top + 'px'\n  }, 100);\n\n  if (response.shot_field.result === \"missed\") {\n    if (response.table.current_player == playerId) {\n      Swal.fire('Twój ruch!');\n    }\n  }\n\n  updateCurrentPlayer(response.table.current_player);\n  uncoverField(response.shot_field);\n\n  if (response.table.winner != null) {\n    console.log(\"Mamy zwycięzcę: \" + response.winner);\n    $('#log-list').append(\"<li>Wygrywa \" + response.winner + \"</li>\");\n    $('#game-log').animate({\n      scrollTop: $('#log-list li:last-child').offset().top + 'px'\n    }, 100);\n    Swal.fire(response.winner + ' wygrywa!').then(function (result) {\n      if (result.isConfirmed) {\n        location.reload();\n      }\n    });\n  }\n});\nwindow.Echo.channel('creating-table.' + tableId).listen('BoardCreated', function (response) {\n  console.log(\"Board has been created!\");\n  Swal.fire(response.message).then(function (result) {\n    if (result.isConfirmed) {\n      location.reload();\n    }\n  });\n});\nwindow.Echo.channel('game.' + tableId + '.chat').listen('ChatMessage', function (response) {\n  console.log(\"New chat message: [\" + response.author + \"]: \" + response.message);\n  $('#chat-log').append(\"<li><b>\" + response.author + \"</b>: \" + response.message + \"</li>\");\n  $('#chat-box').animate({\n    scrollTop: $('#chat-log li:last-child').offset().top - 20 + 'px'\n  }, 100);\n});\n\nfunction updateCurrentPlayer(currentPlayer) {\n  var player_1 = $('#player_1');\n  var player_2 = $('#player_2');\n\n  if (player_1.data(\"id\") === currentPlayer) {\n    player_1.attr(\"class\", \"current-player\");\n    player_2.attr(\"class\", \"\");\n  } else {\n    player_2.attr(\"class\", \"current-player\");\n    player_1.attr(\"class\", \"\");\n  }\n}\n\nfunction uncoverField(shot_field) {\n  var field = $('#' + shot_field.board + '_' + shot_field.x + '_' + shot_field.y);\n\n  if (shot_field.result === \"hit\") {\n    field.html('<img id=\"theImg\" src=\"' + redCrossImg + '\" style=\"width:100%; height: 100%; object-fit: cover;\" />');\n  } else if (shot_field.result === \"missed\") {\n    field.html('<img id=\"theImg\" src=\"' + missedImg + '\" style=\"width:100%; height: 100%; object-fit: cover;\" />');\n  } else if (shot_field.result === 'sunk') {\n    /*location.reload();*/\n    updateBoard(shot_field.board);\n  }\n}\n\nfunction updateField(board, column, row, value) {\n  var field = $('#' + board + \"_\" + column + \"_\" + row);\n\n  if (value === \"#\") {\n    field.html('<img id=\"theImg\" src=\"' + redCrossImg + '\" style=\"width:100%; height: 100%; object-fit: cover;\" />');\n  } else if (value === \"*\") {\n    field.html('<img id=\"theImg\" src=\"' + missedImg + '\" style=\"width:100%; height: 100%; object-fit: cover;\" />');\n  }\n}\n\nfunction updateBoard(board_id) {\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  });\n  $.ajax({\n    url: baseUrl + '/board/' + board_id\n  }).done(function (response) {\n    $.each(response.fields, function (key, value) {\n      $.each(value, function (deeper_key, deeper_value) {\n        updateField(board_id, key, deeper_key, deeper_value);\n      });\n    });\n  }).fail(function (response) {\n    console.log(response);\n  });\n}\n\nfunction sendChatMessage() {\n  var input_field = $('#chat-input-text');\n  var message = input_field.val();\n  input_field.val('');\n\n  if (message !== '') {\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n    $.ajax({\n      url: baseUrl + '/table/' + tableId + '/chat',\n      method: 'post',\n      data: {\n        message: message\n      }\n    }).done(function (response) {\n      console.log(response.message);\n    }).fail(function (response) {\n      console.log(response);\n    });\n  } else {\n    alert('Wpisz jakąś wiadomość.');\n  }\n}\n\nfunction shot(field) {\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  });\n  var board = field.data(\"board_id\");\n  var column = field.data(\"x\");\n  var row = field.data(\"y\");\n  $.ajax({\n    url: baseUrl + '/board/' + board + \"/shot/\" + column + \"/\" + row,\n    method: \"post\"\n  }).done(function (response) {\n    Swal.fire(response.message);\n  }).fail(function (response) {\n    Swal.fire(response.message);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/game-board.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/game-board.js"]();
/******/ 	
/******/ })()
;